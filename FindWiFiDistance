## Script to find distance between an observation point and observed BSSID's.
## Define coodinates of reference point, define list of BSSID's to search, add Wigle Wi-Fi API key for Pygle

cleanedListBSSID = ['3c:04:61:8d:7d:90'] ## Add list to search for, seperated by commas
distanceList = []
observationPoint = [34.1660801, -118.1836636] ## Add the point you are observing from
centerMap = [34.0522, -118.243683] ## Point at which you want to center the map

def plotMap(lat,lng, bssid, distanceTag): ## Plots the points on a map
    folium.CircleMarker(location=(lat, lng), radius=5, color='red', popup="{} at {}".format(bssid,distanceTag)).add_to(mymap)

def findDistance(lat, lng, observationPoint):
    wifipoint = (lat, lng)
    distanceResult = distance.distance(observationPoint, wifipoint).miles
    print(distanceResult)
    distanceList.append(distanceResult)
    return distanceResult

def geolocate_wigle(bssid):
    res = network.search(netid=bssid)
    print(res)
    if res['success'] and res['resultCount']:
        lat = res['results'][0]['trilat']
        lng = res['results'][0]['trilong']
        distanceTag = findDistance(lat, lng, observationPoint)
        plotMap(lat,lng, bssid, distanceTag)
    else:
        print(res)
        lat, lng = None, None
    return lat, lng

mymap = folium.Map(location=centerMap, zoom_start=12)
folium.CircleMarker(location=(observationPoint), radius=10, color='blue', popup='Origin Point').add_to(mymap)
for i in range (0,len(cleanedListBSSID)):
    geolocate_wigle(cleanedListBSSID[i])
mymap.save('tententest1.html')  # saves to html file for display below
print("The maximum distance recorded was {} miles".format(max(distanceList)))
